#!/bin/bash

if [ $# -lt 1 -o $# -gt 2 ]
then
  echo
  echo "delete_ids (from the given file)"
  echo
  echo "USAGE:"
  echo "    delete_ids <filename> <optional_logfile>"
  echo
  exit
fi

DEFAULT_WRITER="localhost"

HERE=`dirname $0`
SCRIPTDIR=`realpath $HERE`
delfile=`realpath $1`

if [[ ! -z "$2" ]]; then
    logfile=`realpath "$2"`
fi

# Make sure we're using a valid java
# and get the utility scripts
source $SCRIPTDIR/set_java_home.sh
source $SCRIPTDIR/utils.sh

# Put jruby in the path
PATH=/htsolr/catalog/bin/jruby/bin:$PATH

HOSTNAME=`hostname -s`
TDIR=`realpath $SCRIPTDIR/..`

log "Working on $HOSTNAME in $TDIR" $logfile

# The whole ridiculous `tee` pipeline is in service of trying to output errors to STDOUT as well as the logfile, so
# they show up in cron jobs. This might not be the place to do it, though...

if [ -f "$delfile" ] 
then
    export -f log
    cd $TDIR
    bundle exec jruby $SCRIPTDIR/delete_ids.rb "$delfile"
    exit_status=$?

else
  log  "No indexing: Could not find delfile '$delfile'" $logfile
fi

if [ ! -z $logfile ]; then
    log "$(tail -1 $logfile)"
fi

exit $exit_status

